{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadbilal/React/zeroland/global/src/pages/careers.js\";\nimport React from \"react\";\nimport \"../styles/pages/careers.scss\";\nimport anime from \"animejs\";\nconst staggerVisualizerEl = document.querySelector('.stagger-visualizer');\nconst fragment = document.createDocumentFragment();\nconst grid = [17, 17];\nconst col = grid[0];\nconst row = grid[1];\nconst numberOfElements = col * row;\n\nfor (let i = 0; i < numberOfElements; i++) {\n  fragment.appendChild(document.createElement('div'));\n}\n\nstaggerVisualizerEl.appendChild(fragment);\nconst staggersAnimation = anime.timeline({\n  targets: '.stagger-visualizer div',\n  easing: 'easeInOutSine',\n  delay: anime.stagger(50),\n  loop: true,\n  autoplay: false\n}).add({\n  translateX: [{\n    value: anime.stagger('-.1rem', {\n      grid: grid,\n      from: 'center',\n      axis: 'x'\n    })\n  }, {\n    value: anime.stagger('.1rem', {\n      grid: grid,\n      from: 'center',\n      axis: 'x'\n    })\n  }],\n  translateY: [{\n    value: anime.stagger('-.1rem', {\n      grid: grid,\n      from: 'center',\n      axis: 'y'\n    })\n  }, {\n    value: anime.stagger('.1rem', {\n      grid: grid,\n      from: 'center',\n      axis: 'y'\n    })\n  }],\n  duration: 1000,\n  scale: .5,\n  delay: anime.stagger(100, {\n    grid: grid,\n    from: 'center'\n  })\n}).add({\n  translateX: () => anime.random(-10, 10),\n  translateY: () => anime.random(-10, 10),\n  delay: anime.stagger(8, {\n    from: 'last'\n  })\n}).add({\n  translateX: anime.stagger('.25rem', {\n    grid: grid,\n    from: 'center',\n    axis: 'x'\n  }),\n  translateY: anime.stagger('.25rem', {\n    grid: grid,\n    from: 'center',\n    axis: 'y'\n  }),\n  rotate: 0,\n  scaleX: 2.5,\n  scaleY: .25,\n  delay: anime.stagger(4, {\n    from: 'center'\n  })\n}).add({\n  rotate: anime.stagger([90, 0], {\n    grid: grid,\n    from: 'center'\n  }),\n  delay: anime.stagger(50, {\n    grid: grid,\n    from: 'center'\n  })\n}).add({\n  translateX: 0,\n  translateY: 0,\n  scale: .5,\n  scaleX: 1,\n  rotate: 180,\n  duration: 1000,\n  delay: anime.stagger(100, {\n    grid: grid,\n    from: 'center'\n  })\n}).add({\n  scaleY: 1,\n  scale: 1,\n  delay: anime.stagger(20, {\n    grid: grid,\n    from: 'center'\n  })\n});\nstaggersAnimation.play();\n\nconst Careers = () => {\n  return React.createElement(\"div\", {\n    class: \"stagger-visualizer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  });\n};\n\nexport default Careers;","map":{"version":3,"sources":["/Users/muhammadbilal/React/zeroland/global/src/pages/careers.js"],"names":["React","anime","staggerVisualizerEl","document","querySelector","fragment","createDocumentFragment","grid","col","row","numberOfElements","i","appendChild","createElement","staggersAnimation","timeline","targets","easing","delay","stagger","loop","autoplay","add","translateX","value","from","axis","translateY","duration","scale","random","rotate","scaleX","scaleY","play","Careers"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/pages/careers.scss\";\nimport anime from \"animejs\";\n\nconst staggerVisualizerEl = document.querySelector('.stagger-visualizer');\nconst fragment = document.createDocumentFragment();\nconst grid = [17, 17];\nconst col = grid[0];\nconst row = grid[1];\nconst numberOfElements = col * row;\n\nfor (let i = 0; i < numberOfElements; i++) {\n  fragment.appendChild(document.createElement('div'));\n}\n\nstaggerVisualizerEl.appendChild(fragment);\n\nconst staggersAnimation = anime.timeline({\n  targets: '.stagger-visualizer div',\n  easing: 'easeInOutSine',\n  delay: anime.stagger(50),\n  loop: true,\n  autoplay: false\n})\n.add({\n  translateX: [\n    {value: anime.stagger('-.1rem', {grid: grid, from: 'center', axis: 'x'}) },\n    {value: anime.stagger('.1rem', {grid: grid, from: 'center', axis: 'x'}) }\n  ],\n  translateY: [\n    {value: anime.stagger('-.1rem', {grid: grid, from: 'center', axis: 'y'}) },\n    {value: anime.stagger('.1rem', {grid: grid, from: 'center', axis: 'y'}) }\n  ],\n  duration: 1000,\n  scale: .5,\n  delay: anime.stagger(100, {grid: grid, from: 'center'})\n})\n.add({\n  translateX: () => anime.random(-10, 10),\n  translateY: () => anime.random(-10, 10),\n  delay: anime.stagger(8, {from: 'last'})\n})\n.add({\n  translateX: anime.stagger('.25rem', {grid: grid, from: 'center', axis: 'x'}),\n  translateY: anime.stagger('.25rem', {grid: grid, from: 'center', axis: 'y'}),\n  rotate: 0,\n  scaleX: 2.5,\n  scaleY: .25,\n  delay: anime.stagger(4, {from: 'center'})\n})\n.add({\n  rotate: anime.stagger([90, 0], {grid: grid, from: 'center'}),\n  delay: anime.stagger(50, {grid: grid, from: 'center'})\n})\n.add({\n  translateX: 0,\n  translateY: 0,\n  scale: .5,\n  scaleX: 1,\n  rotate: 180,\n  duration: 1000,\n  delay: anime.stagger(100, {grid: grid, from: 'center'})\n})\n.add({\n  scaleY: 1,\n  scale: 1,\n  delay: anime.stagger(20, {grid: grid, from: 'center'})\n})\n\nstaggersAnimation.play();\n\n\nconst Careers = () => {\n  return (\n    <div class=\"stagger-visualizer\"></div>\n  );\n};\n\nexport default Careers;\n"]},"metadata":{},"sourceType":"module"}