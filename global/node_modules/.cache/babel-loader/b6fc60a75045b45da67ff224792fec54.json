{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadbilal/React/globalxsolutions/global/src/pages/careers.js\";\nimport React, { Component } from 'react';\nimport PDF, { Text, AddPage, Line, Image, Table, Html } from 'jspdf-react';\nimport OctoCatImage from \"../assets/circled-down-2.svg\";\nconst styleH1 = {\n  fontSize: '15px',\n  textAlign: 'center',\n  color: 'red'\n};\nconst invisibleStyle = {\n  display: 'none'\n};\n\nclass CaseStudies extends Component {\n  render() {\n    const properties = {\n      header: 'Acme'\n    };\n    const head = [[\"ID\", \"Name\", \"Country\"]];\n    const body = [[1, \"Shaw\", \"Tanzania\"], [2, \"Nelson\", \"Kazakhstan\"], [3, \"Garcia\", \"Madagascar\"]];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(PDF, {\n      properties: properties,\n      preview: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Text, {\n      x: 35,\n      y: 25,\n      size: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Octonyan loves jsPDF\"), React.createElement(Image, {\n      src: OctoCatImage,\n      x: 15,\n      y: 40,\n      width: 180,\n      height: 180,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(AddPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Table, {\n      head: head,\n      body: body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(AddPage, {\n      format: \"a6\",\n      orientation: \"l\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Text, {\n      x: 10,\n      y: 10,\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Sample\"), React.createElement(Line, {\n      x1: 20,\n      y1: 20,\n      x2: 60,\n      y2: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(AddPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Html, {\n      sourceById: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.jsPDFGenerator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Company Profile\"), React.createElement(\"div\", {\n      id: \"page\",\n      style: invisibleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: styleH1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Source Html\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"lorem ipsumLorem \"), \"Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\")));\n  }\n\n}\n\nexport default CaseStudies;","map":{"version":3,"sources":["/Users/muhammadbilal/React/globalxsolutions/global/src/pages/careers.js"],"names":["React","Component","PDF","Text","AddPage","Line","Image","Table","Html","styleH1","fontSize","textAlign","color","invisibleStyle","display","CaseStudies","render","properties","header","head","body","OctoCatImage","jsPDFGenerator"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,IAAcC,IAAd,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,aAA7D;;AAIA,MAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,MADI;AAEdC,EAAAA,SAAS,EAAE,QAFG;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAhB;AAMA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMC,WAAN,SAA0Bd,SAA1B,CAAoC;AAClCe,EAAAA,MAAM,GAAI;AACR,UAAMC,UAAU,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAnB;AACA,UAAMC,IAAI,GAAG,CAAC,CAAC,IAAD,EAAO,MAAP,EAAe,SAAf,CAAD,CAAb;AACA,UAAMC,IAAI,GAAG,CACT,CAAC,CAAD,EAAI,MAAJ,EAAY,UAAZ,CADS,EAET,CAAC,CAAD,EAAI,QAAJ,EAAc,YAAd,CAFS,EAGT,CAAC,CAAD,EAAI,QAAJ,EAAc,YAAd,CAHS,CAAb;AAKA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AACE,MAAA,UAAU,EAAEH,UADd;AAEE,MAAA,OAAO,EAAE,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAM,MAAA,CAAC,EAAE,EAAT;AAAa,MAAA,CAAC,EAAE,EAAhB;AAAoB,MAAA,IAAI,EAAE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEI,YAAZ;AAA0B,MAAA,CAAC,EAAE,EAA7B;AAAiC,MAAA,CAAC,EAAE,EAApC;AAAwC,MAAA,KAAK,EAAE,GAA/C;AAAoD,MAAA,MAAM,EAAE,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,IAAI,EAAEC,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAWE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,IAAhB;AAAqB,MAAA,WAAW,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,IAAD;AAAM,MAAA,CAAC,EAAE,EAAT;AAAa,MAAA,CAAC,EAAE,EAAhB;AAAoB,MAAA,KAAK,EAAC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,EAaE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,EAAV;AAAc,MAAA,EAAE,EAAE,EAAlB;AAAsB,MAAA,EAAE,EAAE,EAA1B;AAA8B,MAAA,EAAE,EAAE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAeE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF,EAkBE;AAAQ,MAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAlBF,EAmBE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,KAAK,EAAET,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAEJ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,6jBAFJ,CAnBF,CADF;AAmCD;;AA5CiC;;AA+CpC,eAAeM,WAAf","sourcesContent":["import React, { Component } from 'react'\n \nimport PDF, { Text, AddPage, Line, Image, Table, Html } from 'jspdf-react'\n \nimport OctoCatImage from \"../assets/circled-down-2.svg\";\n \nconst styleH1 = {\n  fontSize: '15px',\n  textAlign: 'center',\n  color: 'red'\n};\n \nconst invisibleStyle = {\n  display: 'none',\n};\nclass CaseStudies extends Component {\n  render () {\n    const properties = { header: 'Acme' }\n    const head = [[\"ID\", \"Name\", \"Country\"]]\n    const body = [\n        [1, \"Shaw\", \"Tanzania\"],\n        [2, \"Nelson\", \"Kazakhstan\"],\n        [3, \"Garcia\", \"Madagascar\"],\n    ]\n    return (\n      <React.Fragment>\n        <PDF\n          properties={properties}\n          preview={true}\n        >\n          <Text x={35} y={25} size={40}>Octonyan loves jsPDF</Text>\n          <Image src={OctoCatImage} x={15} y={40} width={180} height={180} />\n          <AddPage />\n          <Table\n            head={head}\n            body={body}\n          />\n          <AddPage format='a6' orientation='l' />\n          <Text x={10} y={10} color='red'>Sample</Text>\n          <Line x1={20} y1={20} x2={60} y2={20}/>\n          <AddPage />\n          <Html sourceById='page' />\n        </PDF>\n        <button onClick={this.jsPDFGenerator}>Company Profile</button>\n        <div id=\"page\" style={invisibleStyle}>\n          <h1 style={styleH1}>Source Html</h1>\n            <p>\n              <strong>lorem ipsumLorem </strong>Ipsum is simply dummy text of the printing and\n              typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever\n              since the 1500s, when an unknown printer took a galley of type and scrambled it to\n              make a type specimen book. It has survived not only five centuries, but also the\n              leap into electronic typesetting, remaining essentially unchanged. It was popularised\n              in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\n              and more recently with desktop publishing software like Aldus PageMaker including\n              versions of Lorem Ipsum.\n            </p>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default CaseStudies;\n"]},"metadata":{},"sourceType":"module"}