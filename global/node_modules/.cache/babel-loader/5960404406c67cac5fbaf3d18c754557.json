{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadbilal/React/globalxsolutions/global/src/pages/home.js\";\nimport React, { useEffect, useState } from \"react\";\nimport IntroOverlay from \"../components/introOverlay\";\nimport Banner from \"../components/banner\";\nimport Cases from \"../components/cases\";\nimport gsap from \"gsap\";\nlet tl = gsap.timeline();\n\nconst homeAnimation = completeAnimation => {\n  tl.from(\".line span\", 1.8, {\n    y: 100,\n    ease: \"power4.out\",\n    delay: 1,\n    skewY: 7,\n    stagger: {\n      amount: 0.3\n    }\n  }).to(\".overlay-top\", 1.6, {\n    height: 0,\n    ease: \"expo.inOut\",\n    stagger: 0.4\n  }).to(\".overlay-bottom\", 1.6, {\n    width: 0,\n    ease: \"expo.inOut\",\n    delay: -0.8,\n    stagger: {\n      amount: 0.4\n    }\n  }).to(\".intro-overlay\", 0, {\n    css: {\n      display: \"none\"\n    }\n  }).from(\".case-image img\", 1.6, {\n    scale: 1.4,\n    ease: \"expo.inOut\",\n    delay: -2,\n    stagger: {\n      amount: 0.4\n    },\n    onComplete: completeAnimation\n  });\n};\n\nconst Home = ({\n  dimensions\n}) => {\n  const [animationComplete, setAnimationComplete] = useState(false);\n\n  const completeAnimation = () => {\n    setAnimationComplete(true);\n  };\n\n  useEffect(() => {\n    homeAnimation(completeAnimation);\n  }, []); // useEffect(() => {\n  //   let vh = dimensions.height * 0.01;\n  //   document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n  // }, [dimensions.width]);\n\n  return React.createElement(React.Fragment, null, animationComplete === false ? React.createElement(IntroOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }) : \"\", React.createElement(Banner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Cases, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/muhammadbilal/React/globalxsolutions/global/src/pages/home.js"],"names":["React","useEffect","useState","IntroOverlay","Banner","Cases","gsap","tl","timeline","homeAnimation","completeAnimation","from","y","ease","delay","skewY","stagger","amount","to","height","width","css","display","scale","onComplete","Home","dimensions","animationComplete","setAnimationComplete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,IAAIC,EAAE,GAAGD,IAAI,CAACE,QAAL,EAAT;;AAEA,MAAMC,aAAa,GAAGC,iBAAiB,IAAI;AACzCH,EAAAA,EAAE,CAACI,IAAH,CAAQ,YAAR,EAAsB,GAAtB,EAA2B;AACzBC,IAAAA,CAAC,EAAE,GADsB;AAEzBC,IAAAA,IAAI,EAAE,YAFmB;AAGzBC,IAAAA,KAAK,EAAE,CAHkB;AAIzBC,IAAAA,KAAK,EAAE,CAJkB;AAKzBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AALgB,GAA3B,EASGC,EATH,CASM,cATN,EASsB,GATtB,EAS2B;AACvBC,IAAAA,MAAM,EAAE,CADe;AAEvBN,IAAAA,IAAI,EAAE,YAFiB;AAGvBG,IAAAA,OAAO,EAAE;AAHc,GAT3B,EAcGE,EAdH,CAcM,iBAdN,EAcyB,GAdzB,EAc8B;AAC1BE,IAAAA,KAAK,EAAE,CADmB;AAE1BP,IAAAA,IAAI,EAAE,YAFoB;AAG1BC,IAAAA,KAAK,EAAE,CAAC,GAHkB;AAI1BE,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAJiB,GAd9B,EAsBGC,EAtBH,CAsBM,gBAtBN,EAsBwB,CAtBxB,EAsB2B;AACvBG,IAAAA,GAAG,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AADkB,GAtB3B,EAyBGX,IAzBH,CAyBQ,iBAzBR,EAyB2B,GAzB3B,EAyBgC;AAC5BY,IAAAA,KAAK,EAAE,GADqB;AAE5BV,IAAAA,IAAI,EAAE,YAFsB;AAG5BC,IAAAA,KAAK,EAAE,CAAC,CAHoB;AAI5BE,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KAJmB;AAO5BO,IAAAA,UAAU,EAAEd;AAPgB,GAzBhC;AAkCD,CAnCD;;AAqCA,MAAMe,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC/B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4C1B,QAAQ,CAAC,KAAD,CAA1D;;AAEA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9BkB,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAFD;;AAIA3B,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,aAAa,CAACC,iBAAD,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT,CAP+B,CAW/B;AACA;AACA;AACA;;AAEA,SACE,0CACGiB,iBAAiB,KAAK,KAAtB,GAA8B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GAAiD,EADpD,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAvBD;;AAyBA,eAAeF,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport IntroOverlay from \"../components/introOverlay\";\nimport Banner from \"../components/banner\";\nimport Cases from \"../components/cases\";\nimport gsap from \"gsap\";\n\nlet tl = gsap.timeline();\n\nconst homeAnimation = completeAnimation => {\n  tl.from(\".line span\", 1.8, {\n    y: 100,\n    ease: \"power4.out\",\n    delay: 1,\n    skewY: 7,\n    stagger: {\n      amount: 0.3\n    }\n  })\n    .to(\".overlay-top\", 1.6, {\n      height: 0,\n      ease: \"expo.inOut\",\n      stagger: 0.4\n    })\n    .to(\".overlay-bottom\", 1.6, {\n      width: 0,\n      ease: \"expo.inOut\",\n      delay: -0.8,\n      stagger: {\n        amount: 0.4\n      }\n    })\n    .to(\".intro-overlay\", 0, {\n      css: { display: \"none\" }\n    })\n    .from(\".case-image img\", 1.6, {\n      scale: 1.4,\n      ease: \"expo.inOut\",\n      delay: -2,\n      stagger: {\n        amount: 0.4\n      },\n      onComplete: completeAnimation\n    });\n};\n\nconst Home = ({ dimensions }) => {\n  const [animationComplete, setAnimationComplete] = useState(false);\n\n  const completeAnimation = () => {\n    setAnimationComplete(true);\n  };\n\n  useEffect(() => {\n    homeAnimation(completeAnimation);\n  }, []);\n\n  // useEffect(() => {\n  //   let vh = dimensions.height * 0.01;\n  //   document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n  // }, [dimensions.width]);\n\n  return (\n    <>\n      {animationComplete === false ? <IntroOverlay /> : \"\"}\n      <Banner />\n      <Cases />\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}